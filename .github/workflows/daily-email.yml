name: Daily Job Digest

on:
  schedule:
    - cron: "0 6 * * *"   # 06:00 UTC (≈ 08:00 Paris en été / 07:00 en hiver)
  workflow_dispatch:       # Lancer manuellement depuis l’onglet Actions

jobs:
  send-digest:
    runs-on: ubuntu-latest

    # Secrets à créer dans Settings → Secrets and variables → Actions
    env:
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      RSS_FEEDS: ${{ secrets.RSS_FEEDS }}
      INCLUDE_KEYWORDS: ${{ secrets.INCLUDE_KEYWORDS }}
      EXCLUDE_KEYWORDS: ${{ secrets.EXCLUDE_KEYWORDS }}
      HOURS_WINDOW: ${{ secrets.HOURS_WINDOW }}
      EMAIL_SUBJECT: ${{ secrets.EMAIL_SUBJECT }}

      # Nouveaux pour le filtrage/présentation
      TIMEZONE: ${{ secrets.TIMEZONE }}
      ONLY_TODAY: ${{ secrets.ONLY_TODAY }}
      GROUP_BY: ${{ secrets.GROUP_BY }}
      LIMIT_PER_SOURCE: ${{ secrets.LIMIT_PER_SOURCE }}
      HIGHLIGHT_KEYWORDS: ${{ secrets.HIGHLIGHT_KEYWORDS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build config.yaml from secrets
        shell: bash
        run: |
          set -euo pipefail

          # Valeurs par défaut si secrets non définis
          : "${HOURS_WINDOW:=24}"
          : "${TIMEZONE:=Europe/Paris}"
          : "${ONLY_TODAY:=false}"
          : "${GROUP_BY:=day}"                 # none | day
          : "${LIMIT_PER_SOURCE:=0}"          # 0 = illimité
          : "${HIGHLIGHT_KEYWORDS:=true}"

          # En-tête config
          echo "hours_window: ${HOURS_WINDOW}"           >  config.yaml
          echo "timezone: \"${TIMEZONE}\""               >> config.yaml
          echo "only_today: ${ONLY_TODAY}"               >> config.yaml
          echo "group_by: \"${GROUP_BY}\""               >> config.yaml
          echo "limit_per_source: ${LIMIT_PER_SOURCE}"   >> config.yaml
          echo "highlight_keywords: ${HIGHLIGHT_KEYWORDS}" >> config.yaml

          # Flux RSS
          IFS=',' read -ra FEEDS <<< "${RSS_FEEDS:-}"
          echo "rss_feeds:" >> config.yaml
          for f in "${FEEDS[@]:-}"; do
            f="$(echo "$f" | xargs)"
            [ -n "$f" ] && echo "  - \"$f\"" >> config.yaml
          done

          # Fonctions utilitaires pour listes YAML
          to_yaml_list () {
            local raw="${1:-}"; local out=""
            IFS=',' read -ra arr <<< "${raw}"
            for k in "${arr[@]:-}"; do
              k="$(echo "$k" | xargs)"
              [ -n "$k" ] && out="${out} \"${k}\","
            done
            echo "${out%,}"
          }

          INC=$(to_yaml_list "${INCLUDE_KEYWORDS:-}")
          EXC=$(to_yaml_list "${EXCLUDE_KEYWORDS:-}")

          echo "include_keywords: [${INC}]" >> config.yaml
          echo "exclude_keywords: [${EXC}]" >> config.yaml
          echo "tags: [\"emploi\", \"Paris\"]" >> config.yaml
          echo "email_subject: \"${EMAIL_SUBJECT:-Veille d'offres d'emploi – résumé quotidien}\"" >> config.yaml

          {
            echo "email:"
            echo "  from: \"${EMAIL_FROM}\""
            echo "  to:"
            if [ -n "${EMAIL_TO:-}" ]; then
              echo "${EMAIL_TO}" | tr ',' '\n' | while read -r addr; do
                addr="$(echo "$addr" | xargs)"
                [ -n "$addr" ] && echo "    - \"${addr}\""
              done
            fi
            echo "  smtp:"
            echo "    host: \"${SMTP_HOST}\""
            echo "    port: ${SMTP_PORT:-587}"
            echo "    username: \"${SMTP_USERNAME}\""
            echo "    password: \"${SMTP_PASSWORD}\""
            echo "    use_tls: true"
          } >> config.yaml

          echo "----- config.yaml -----"
          cat config.yaml

      - name: Run script
        run: |
          python job_digest.py
